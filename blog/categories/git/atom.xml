<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | kurobaraのブログ]]></title>
  <link href="http://moonstruckdrops.github.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://moonstruckdrops.github.com/"/>
  <updated>2018-05-26T01:10:33+09:00</updated>
  <id>http://moonstruckdrops.github.com/</id>
  <author>
    <name><![CDATA[kurobara]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[gitのブランチ系コマンドでよく使うもの]]></title>
    <link href="http://moonstruckdrops.github.com/blog/2016/06/16/use-git-branch-command/"/>
    <updated>2016-06-16T21:20:00+09:00</updated>
    <id>http://moonstruckdrops.github.com/blog/2016/06/16/use-git-branch-command</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<hr />

<p>たまになんだっけ？ってなるものがあるのでメモしておく<br/>
基本的に削除系</p>

<h3>ブランチ作成</h3>

<hr />

<p>普通に作る</p>

<p><code>
$ git branch hoge
</code></p>

<p>別のやり方</p>

<p><code>
$ git checkout -b hoge
</code></p>

<h3>ローカルブランチの削除</h3>

<hr />

<p>マージ済みのものを削除</p>

<p><code>
$ git branch -d hoge
</code></p>

<p>マージされていないものを強制削除</p>

<p><code>
$ git checkout -D hoge
</code></p>

<h3>リモートブランチの削除</h3>

<hr />

<p>pushの逆をするだけ</p>

<p><code>
$ git push origin :hoge
</code></p>

<h3>マージ済みブランチの探索</h3>

<hr />

<p>こんな感じで難しくない</p>

<p><code>
$ git branch -r --list --merged
</code></p>

<p>オプションを変更するだけで、未マージも見つかる</p>

<p><code>
$ git branch -r --list --no-merged
</code></p>

<h3>リモートブランチとの同期</h3>

<hr />

<p>誰かがリモートブランチが削除したとしても、その前にfetchしていたら自分のローカルブランチには残っているので同期をする<br/>
これは、放置しておくとよく忘れるやつ</p>

<p><code>
$ git remote prune origin
</code></p>

<p># ぶっちゃけ、よく忘れる一番最後のだけ書きたかった</p>
]]></content>
  </entry>
  
</feed>
